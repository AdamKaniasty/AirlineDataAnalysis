Name,Query
AirportWithMostWeatherDelays,"Select airport, count(*) as totalFLights, avg(WeatherDelay) as averageWeatherDelay from main
inner join airports ON (Trim(main.Origin) = Trim('""' from airports.iata))
where Year between 2005 and 2007
group by airport
having totalFLights > 50000
order by averageWeatherDelay desc
limit 3;"
AtlantaDestinationsWithWeatherDelays,"Select a2.city, count(*) as totalFlights, avg(WeatherDelay) as averageWeatherDelay from main m
inner join airports a1 ON (Trim(m.Origin) = Trim('""' from a1.iata))
inner join airports a2 ON (Trim(m.Dest) = Trim('""' from a2.iata))
where a1.city like '%Atlanta%'
and Year between 2005 and 2007
group by a2.city
having totalFlights > 1000
order by averageWeatherDelay desc
limit 3;"
AtlantaBT,"SELECT date, count(*) totalFlights, sum(Cancelled) as cancelled, Avg(ArrDelay), Avg(DepDelay), AVG(TaxiIn),avg(TaxiOut), Avg(WeatherDelay)  from main m
inner join airports a1 ON (Trim(m.Origin) = Trim('""' from a1.iata))
inner join airports a2 ON (Trim(m.Dest) = Trim('""' from a2.iata))
where a1.city like '%Atlanta%' and a2.city like '%Baton Rouge%'
and Year between 2005 and 2007
group by date;"
AtlantaBTWeather,"SELECT
    a.date,
    avg(totalFlights) as totalFlights,
    avg(cancelled) as cancelled,
    Avg(`avg(ArrDelay)`) as ArrDelay,
    Avg(`avg(DepDelay)`) as DepDelay,
    Avg(`avg(TaxiIn)`) as TaxiIn,
    Avg(`avg(TaxiOut)`) as TaxiOut,
    Avg(`avg(WeatherDelay)`) as WeatherDelay,
    Avg(aw.AWND) as A_AWND,
    Avg(aw.PGTM) as A_PGTM,
    Avg(aw.PRCP) as A_PRCP,
    Avg(aw.TAVG) as A_TAVG,
    Avg(aw.TMAX) as A_TMAX,
    Avg(aw.TMIN) as A_TMIN,
    Avg(bw.AWND) as B_AWND,
    Avg(bw.PGTM) as B_PGTM,
    Avg(bw.PRCP) as B_PRCP,
    Avg(bw.TAVG) as B_TAVG,
    Avg(bw.TMAX) as B_TMAX,
    Avg(bw.TMIN) as B_TMIN
from AtlantaBT a
inner join `atlanta-weather` aw on (a.date = aw.DATE)
inner join `br-weather` bw on a.date = bw.DATE
group by date
Having WeatherDelay >= 0"
AtlantaAnwhr,"Select m.date,
       Count(*)            as Flights,
       sum(m.Cancelled)    as Cancelled,
       avg(m.Distance)     as Distance,
       avg(m.ArrDelay)     as ArrDelay,
       avg(m.DepDelay)     as DepDelay,
       avg(m.TaxiOut)      as TaxiOut,
       avg(m.TaxiIn)       as TaxiIn,
       avg(m.WeatherDelay) as WeatherDelay,
       avg(w.AWND)         as AWND,
       avg(w.PGTM)         as PGTM,
       avg(w.PRCP)         as PRCP,
       avg(w.SNOW)         as SNOW,
       avg(w.SNWD)         as SNWD,
       avg(w.TMAX)         as TMAX,
       avg(w.TMIN)         as TMIN
from atlanta m
         inner join `atlanta-weather` w on (m.date = w.date)
group by m.date
Having WeatherDelay >= 0"
CarriersSecProblems,"SELECT T2.UniqueCarrier as UniqueCarrierCode, Description, NumSecurityProblems, AvgNumPlanes
        FROM (
          SELECT UniqueCarrier, COUNT(*) as NumSecurityProblems FROM main
          WHERE (SecurityDelay > 0
          or CancellationCode = 'D')
          and Year >= 2003
          GROUP BY UniqueCarrier
        ) AS problemy
        RIGHT JOIN
        (
        SELECT UniqueCarrier, Description, ROUND(AVG(NumPlanes), 1) as AvgNumPlanes
          FROM (SELECT Year, UniqueCarrier, COUNT(DISTINCT TailNum) as NumPlanes
                FROM main
                WHERE Year >= 2003
                GROUP BY UniqueCarrier, Year) AS T1
          INNER JOIN carriers
          ON carriers.Code = UniqueCarrier
          GROUP BY UniqueCarrier, Description
        ) AS T2
        ON problemy.UniqueCarrier = T2.UniqueCarrier;"
CarriersSecProblemsByYear,"SELECT T2.Year, T2.UniqueCarrier as UniqueCarrierCode, Description, NumSecurityProblems, NumPlanesThisYear
        FROM (
          SELECT Year, UniqueCarrier, COUNT(*) as NumSecurityProblems FROM main
          WHERE (SecurityDelay > 0
          or CancellationCode = 'D') and Year >= 2003
          GROUP BY UniqueCarrier, Year
        ) AS problemy
        RIGHT JOIN
        (
          SELECT Year, UniqueCarrier, Description, NumPlanesThisYear
          FROM (SELECT Year, UniqueCarrier, COUNT(DISTINCT TailNum) as NumPlanesThisYear
                FROM main
                WHERE Year >= 2003
                GROUP BY UniqueCarrier, Year) AS T1
          INNER JOIN carriers
          ON carriers.Code = UniqueCarrier
          ORDER BY Year
        ) AS T2
        ON problemy.UniqueCarrier = T2.UniqueCarrier and problemy.Year = T2.Year
        ORDER BY Year, UniqueCarrierCode;"
CarriersCarrierDelayHoursByYear,"SELECT T2.Year, T2.UniqueCarrier as UniqueCarrierCode, Description, CollectiveCarrierDelay, NumPlanesThisYear
        FROM (
          SELECT Year, UniqueCarrier, SUM(CarrierDelay) as CollectiveCarrierDelay FROM main
          WHERE (CarrierDelay > 0) and Year >= 2003
          GROUP BY UniqueCarrier, Year
        ) AS problemy
        RIGHT JOIN
        (
          SELECT Year, UniqueCarrier, Description, NumPlanesThisYear
          FROM (SELECT Year, UniqueCarrier, COUNT(DISTINCT TailNum) as NumPlanesThisYear
                FROM main
                WHERE Year >= 2003
                GROUP BY UniqueCarrier, Year) AS T1
          INNER JOIN carriers
          ON carriers.Code = UniqueCarrier
          ORDER BY Year
        ) AS T2
        ON problemy.UniqueCarrier = T2.UniqueCarrier and problemy.Year = T2.Year
        ORDER BY Year, UniqueCarrierCode;"
BestPlanesCatchUp,"WITH addded_row_number AS (
SELECT *, (ROW_NUMBER() over (PARTITION BY UniqueCarrier ORDER BY AvgCatchUpTime)) AS row_num
        FROM ( SELECT UniqueCarrier, pd.tailnum, AvgCatchUpTime, iloscWystapien, pd.manufacturer, pd.model, pd.aircraft_type, pd.year, pd.type, pd.engine_type FROM (
               SELECT UniqueCarrier, TailNum, AVG(ArrDelay - DepDelay) as AvgCatchUpTime, COUNT(*) as iloscWystapien from main
               WHERE (Year >= 1995)
                # now we don't need to exclude ArrDelay < -2, because we're looking at the difference
               GROUP BY UniqueCarrier, TailNum
               HAVING iloscWystapien > 10  # if the plane has less than 10 flights, it's not reliable
                    and AvgCatchUpTime is not null
               ORDER BY UniqueCarrier, AvgCatchUpTime ) AS opoznienia
                RIGHT JOIN `plane-data` as pd
                ON pd.tailnum = opoznienia.TailNum
               ) AS opoznieniaMerged
) SELECT UniqueCarrier, tailnum, AvgCatchUpTime, iloscWystapien FROM addded_row_number WHERE (row_num = 1 or row_num = 2 or row_num = 3);"
BestPlanesDep,"WITH addded_row_number AS (
SELECT *, (ROW_NUMBER() over (PARTITION BY UniqueCarrier ORDER BY AvgDepDelay)) AS row_num
        FROM ( SELECT UniqueCarrier, pd.tailnum, AvgDepDelay, iloscWystapien, pd.manufacturer, pd.model, pd.aircraft_type, pd.year, pd.type, pd.engine_type FROM (
               SELECT UniqueCarrier, TailNum, AVG(DepDelay) as AvgDepDelay, COUNT(*) as iloscWystapien from main
               WHERE Year >= 1995 and DepDelay >= -2
               GROUP BY UniqueCarrier, TailNum
               HAVING iloscWystapien > 10  # if the plane has less than 10 flights, it's not reliable
                    and AvgDepDelay is not null
               ORDER BY UniqueCarrier, AvgDepDelay ) AS opoznienia
                RIGHT JOIN `plane-data` as pd
                ON pd.tailnum = opoznienia.TailNum
               ) AS opoznieniaMerged
) SELECT UniqueCarrier, tailnum, AvgDepDelay, iloscWystapien FROM addded_row_number WHERE (row_num = 1 or row_num = 2 or row_num = 3);"
PlanesPerf,"SELECT UniqueCarrier, pd.tailnum, AvgCatchUpTime, iloscWystapien, type, manufacturer, issue_date, model, status, aircraft_type, engine_type, year FROM `plane-data` as pd
LEFT JOIN (
SELECT UniqueCarrier, TailNum, AVG(ArrDelay - DepDelay) as AvgCatchUpTime, COUNT(*) as iloscWystapien
               from main
               WHERE (Year >= 1995)
               GROUP BY UniqueCarrier, TailNum
               HAVING iloscWystapien > 10 # if the plane has less than 10 flights, it's not reliable
                  and AvgCatchUpTime is not null
               ORDER BY UniqueCarrier, AvgCatchUpTime ) AS opoznienia
ON pd.tailnum = opoznienia.TailNum
WHERE AvgCatchUpTime is not null;"